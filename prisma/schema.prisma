// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication and profile management
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          String    @default("user") // user, admin
  businessPlans BusinessPlan[]
  strategicPlans StrategicPlan[]
  marketingPlans MarketingPlan[]
  conversations Conversation[]
}

// Business Plan model with detailed structure
model BusinessPlan {
  id          String   @id @default(cuid())
  title       String
  status      String   @default("draft") // draft, completed
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Executive Summary
  executiveSummary ExecutiveSummary?

  // Business Description
  businessDescription BusinessDescription?

  // Marketing Plan
  marketingPlan BusinessMarketingPlan?

  // Operating Plan
  operatingPlan OperatingPlan?

  // Financial Plan
  financialPlan FinancialPlan?

  // Risk Management
  riskManagement RiskManagement?

  // Attachments
  attachments String[] // Array of file URLs or references
}

// Executive Summary section
model ExecutiveSummary {
  id                 String      @id @default(cuid())
  visionAndGoals     String      @db.Text
  productsOrServices String      @db.Text
  targetMarket       String      @db.Text
  distributionStrategy String    @db.Text
  businessPlan       BusinessPlan @relation(fields: [businessPlanId], references: [id], onDelete: Cascade)
  businessPlanId     String      @unique // One-to-one relation
}

// Business Description section
model BusinessDescription {
  id                String      @id @default(cuid())
  nameAndAddress    String      @db.Text
  dateFounded       String
  founders          String      @db.Text
  ownershipStructure String     @db.Text
  missionStatement  String      @db.Text
  keyManagement     String[]    // Array of management team members
  businessPlan      BusinessPlan @relation(fields: [businessPlanId], references: [id], onDelete: Cascade)
  businessPlanId    String      @unique // One-to-one relation
}

// Marketing Plan section
model BusinessMarketingPlan {
  id                    String      @id @default(cuid())
  productDifferentiation String     @db.Text
  industryProfile       String      @db.Text
  competitiveAnalysis   String      @db.Text
  targetMarketDetails   String      @db.Text
  marketingStrategy     String      @db.Text
  businessPlan          BusinessPlan @relation(fields: [businessPlanId], references: [id], onDelete: Cascade)
  businessPlanId        String      @unique // One-to-one relation
}

// Operating Plan section
model OperatingPlan {
  id                    String      @id @default(cuid())
  personnel             String      @db.Text
  productionMethods     String      @db.Text
  qualityControl        String      @db.Text
  facilitiesAndEquipment String     @db.Text
  suppliers             String      @db.Text
  billingAndCollections String      @db.Text
  recordkeeping         String      @db.Text
  businessPlan          BusinessPlan @relation(fields: [businessPlanId], references: [id], onDelete: Cascade)
  businessPlanId        String      @unique // One-to-one relation
}

// Financial Plan section
model FinancialPlan {
  id                    String      @id @default(cuid())
  financialStatements   String      @db.Text
  pricingStrategy       String      @db.Text
  breakEvenAnalysis     String      @db.Text
  cashFlowProjections   String      @db.Text
  forecastingAssumptions String     @db.Text
  businessPlan          BusinessPlan @relation(fields: [businessPlanId], references: [id], onDelete: Cascade)
  businessPlanId        String      @unique // One-to-one relation
}

// Risk Management section
model RiskManagement {
  id                String      @id @default(cuid())
  keyRisks          String      @db.Text
  contingencyPlans  String      @db.Text
  businessPlan      BusinessPlan @relation(fields: [businessPlanId], references: [id], onDelete: Cascade)
  businessPlanId    String      @unique // One-to-one relation
}

// Conversation model for storing chat history
model Conversation {
  id        String    @id @default(cuid())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
}

// Message model for storing individual messages
model Message {
  id             String       @id @default(cuid())
  content        String
  role           String      // user, assistant
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  createdAt      DateTime    @default(now())
}

// Strategic Plan model
model StrategicPlan {
  id          String   @id @default(cuid())
  title       String
  description String?
  content     Json     // Stores the strategic plan structure
  status      String   @default("draft") // draft, completed
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Marketing Plan model
model MarketingPlan {
  id          String   @id @default(cuid())
  title       String
  description String?
  content     Json     // Stores the marketing plan structure
  status      String   @default("draft") // draft, completed
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Resource model for learning materials and templates
model Resource {
  id          String   @id @default(cuid())
  title       String
  description String
  type        String   // article, template, guide, video
  content     String   // Could be URL or content depending on type
  category    String   // business-planning, marketing, operations, etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Progress Tracking model
model Progress {
  id          String   @id @default(cuid())
  userId      String
  moduleType  String   // business-plan, strategic-plan, marketing-plan
  moduleId    String   // References the specific plan ID
  status      Int      // Percentage complete
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
} 